name: Release sdwu
on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [windows] # linux, darwin
        goarch: [amd64] # "386", arm64
        # exclude:
        #   - goarch: "386"
        #     goos: darwin
        #   - goarch: arm64
        #     goos: windows

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4.1.1

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: "1.20"
      - run: go version

      - name: Install Go Dependencies
        run: |
          go mod tidy

      - name: Set up UPX
        uses: crazy-max/ghaction-upx@v3.0.0
        with:
          install-only: true
      - run: upx --version

      - name: Set up Pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: latest
      - run: pnpm --version

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
      - run: node --version

      - name: Install Node.Js Dependencies
        run: |
          cd ./app
          pnpm i
          pnpm build

      - name: Move UI To Go Src
        run: make mv-ui

      - name: Release Go Binary
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://golang.google.cn/dl/go1.22.1.linux-amd64.tar.gz"
          project_path: "./server"
          binary_name: "sdwu"
          extra_files: LICENSE README.md